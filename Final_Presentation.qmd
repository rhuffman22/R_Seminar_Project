---
title: "Exploring Eastern US Forests: A Data Analysis Journey"

author: "Alyssa Huffman , Meghan Purvis , Adam Parker , William Foner"

format: pptx
---

# Introduction

Welcome to the exploration of the Eastern US forests using the Forest Inventory and Analysis (FIA) full data set.

## 1. Exploratory Data Analysis (EDA)

Let's start by loading and exploring the data set. How many rows and columns do we have? What are the variables we'll be working with?

```{r , echo=FALSE}

library(dplyr)

library(sp)

library(sf)

library(ggplot2)

library(matrixStats)

library(git2r)

library(purrr)

```

```{r}

# projecting dataset

fia_df <- read.csv("C:/Users/rhuffman/OneDrive - The University of Memphis/R-programming/Tree_Data_Analaysis/tree_raw_data_with_env_cleaned.csv")

fia_sf <- st_as_sf(fia_df, coords = c("long", "lat"), crs = 4326)
plot(st_geometry(fia_sf),cex = 0.2)
fia_sf_albers <- st_transform(fia_sf, crs = "ESRI:102008")
st_crs(fia_sf_albers)
plot(st_geometry(fia_sf_albers))

extent <- st_bbox(fia_sf_albers)
extent

grid <- st_make_grid(st_as_sfc(extent), crs = "ESRI:102008", cellsize = c(20000,20000), square = TRUE)
grid_sf <- st_sf(id = 1:length(grid), geometry = grid)

overlaps <- st_join(fia_sf_albers, grid_sf)

centroids_albers <- st_centroid(grid_sf$geometry)

id1 <- unique(overlaps$id)
id1

centroids_albers <- st_centroid(grid_sf[grid_sf$id %in% id1,]$geometry)

centroids_wgs84 <- st_transform(centroids_albers, crs = 4326)

centroid_wgs84_coords <- st_coordinates(centroids_wgs84)
nrow(centroid_wgs84_coords[is.na(centroid_wgs84_coords["X"]),])

gridid <- grid_sf[grid_sf$id %in% id1,]$id

centroid_df <- data.frame(
  GRIDID = id1,
  centroid_long = centroid_wgs84_coords[,"X"],
  centroid_lat = centroid_wgs84_coords[,"Y"]
)
table(unique(overlaps$id) %in% centroid_df$GRIDID)
fia_grid_df <- merge(overlaps, centroid_df, by.x = "id", by.y = "GRIDID", all.x = TRUE)
fia_grid_df = as.data.frame(fia_grid_df)

fia_grid_sample = fia_grid_df %>%
  sample_frac(0.01)
fia_grid_sample

```

```{r}

# Load and explore the dataset

tree_ht = ggplot(fia_df, aes(x = ht)) +
  geom_bar()
tree_ht

tree_dia = ggplot(fia_df, aes(x = dia))+
  geom_histogram(binwidth = 5)
tree_dia

# Display the structure of the data
str(fia_df)

# Display summary statistics
summary(fia_df)

# Display the first few rows of the data
head(fia_df)

# Check for missing values
cat("Missing values:\n")
print(colSums(is.na(fia_df)))

# Visualize the distribution of numeric variables
numeric_vars <- select_if(fia_df, is.numeric)
numeric_vars

```

## 2. Calculating Species Richness

Now, let's calculate species richness at the grid level. How diverse are these forests?

```{r}

fia_total <- fia_grid_df %>%
  group_by(id) %>%
  summarise(richness = n_distinct(common))

n_distinct(fia_total$id)

fia_grid_df <- merge(fia_grid_df, fia_total, by.x = "id", by.y = "id")
fia_grid_df
names(fia_grid_df)

```

## 3. Average Species Richness Across Latitudinal Bands

Moving on, we'll examine how species richness varies across latitudinal bands. Are there patterns we can observe?

```{r}

# Sequencing by 0.5 degrees
# Your original code for creating the sequence
myseq <- seq(from = 25, to = 50, by = 0.5)
myseq

# Creating an empty data frame to store results
sr_bands <- data.frame(LatBands = numeric(length(myseq)), SR = numeric(length(myseq)))
sr_bands

# Looping through each latitude band
for (i in 1:length(myseq)) {
  # Defining the latitude range for the current band
  lat_min <- myseq[i] - 0.5  # Adjusted to represent a 0.5-degree interval
  lat_max <- myseq[i] + 0.5  # Adjusted to represent a 0.5-degree interval
  
  # Filtering the data within the latitude range
  fia_df_subset <- fia_grid_sample %>%
    filter(centroid_lat > lat_min & centroid_lat <= lat_max)
  
  # Calculating species richness (number of unique species) for the current band
 sr <- length(unique(fia_df_subset$spcd))
  
  # Storing the results in the data frame
  sr_bands[i, "LatBands"] <- myseq[i]
  sr_bands[i, "SR"] <- sr
}
sr_bands

```

```{r}

ggplot(data = sr_bands, aes(x = LatBands, y = SR)) +
  geom_point() +
  labs(
    title = "Species Richness Along Latitude Bands",
    x = "Latitude Bands",
    y = "Species Richness")

```

## 4. Estimating Species Richness Using Bootstrapping

To add a layer of uncertainty, we'll estimate species richness using bootstrapping methods. Let's visualize the distribution and report the mean and standard deviation.

```{r}

set.seed(123)
n_bootstrap <- 100
results <- data.frame(matrix(ncol = n_bootstrap + 1, nrow = length(unique(fia_grid_df$id))))

for (i in 1:n_bootstrap) {
  sampled_df <- sample_frac(fia_grid_df, 1, replace = TRUE)
  grid_sr <- sampled_df %>%
    group_by(id) %>%
    summarise(SR = n_distinct(spcd))

  # Check if the number of rows in grid_sr matches the number of rows in results
  if (nrow(grid_sr) != nrow(results)) {
    # Subset grid_sr to match the number of rows in results
    grid_sr <- grid_sr[1:nrow(results), ]
  }

  results[, i + 1] <- grid_sr$SR
}

# Calculate mean and standard deviation of species richness for each row
results$mean_SR <- rowMeans(results[, -(1:1)], na.rm = TRUE)
results$std_SR <- apply(results[, -(1:1)], 1, sd, na.rm = TRUE)
results$id = unique(fia_grid_df$id)

results <- merge(results, fia_grid_df[, c("id", "centroid_lat", "centroid_long")], by = "id", all.x = TRUE)
results

# Check the resulting data frame
print(results)
```

## 5. Visualizing Results on a Map

Now, let's bring our results to life by visualizing them on a map. Where are the hot-spots of species richness?

```{r}

Std_SR_plot <- ggplot(results, aes(x = centroid_long, y = centroid_lat, color = std_SR)) +
  geom_point() +
  scale_color_gradient(low = "green", high = "red") +  # Adjust color scale
  labs(title = "Bootstrap Results for Standard Deviation Species Richness",
       x = "Centroid Longitude",
       y = "Centroid Latitude") +
  theme_minimal()
Std_SR_plot

```

```{r}
MeanSR_plot <- ggplot(results, aes(x = centroid_long, y = centroid_lat, color = mean_SR)) +
  geom_point() +
  scale_color_gradient(low = "green", high = "red") +  # Adjust color scale
  labs(title = "Bootstrap Results for Mean Species Richness",
       x = "Centroid Longitude",
       y = "Centroid Latitude") +
  theme_minimal()
MeanSR_plot
```

# Conclusion

In this data analysis journey, we've uncovered insights about the Eastern US forests. From exploring basic statistics to visualizing patterns across latitudes, and adding a touch of uncertainty with bootstrapping, we've gained a deeper understanding of the forest ecosystem.
